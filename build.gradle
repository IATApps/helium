apply from: file("gradle/integration-tests.gradle")

boolean hasCredentials = hasProperty('nexusUsername') && hasProperty('nexusPassword')

version = '0.4.1-SNAPSHOT'

//noinspection GroovyAssignabilityCheck
task populateVersion(description: "Populate root project version") << {
  String version = project.setVersionValue
  [
      fileTree(dir: "$rootDir", includes: ["*.gradle"]),
      fileTree(dir: "$rootDir/samples", includes: ["*/*.gradle"]),
      fileTree(dir: "$rootDir", includes: ["*/src/**/*.java", "*/src/**/*.groovy"])
  ].each { def collection ->
    collection.each {
      String code = it.getText("UTF-8")
      code = code.replace("$rootProject.version", version)
      it.withWriter("UTF-8") { it << code }
    }
  }
}

subprojects {
  buildscript {
    repositories {
      mavenCentral()
    }

    dependencies {
      classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.3'
    }
  }

  group = 'com.stanfy.helium'
  version = rootProject.version

  repositories {
    mavenCentral()
  }

  afterEvaluate {

    ["Groovy", "Java"].each {
      [tasks["compile$it"], tasks["compileTest$it"]].each {
        it.configure {
          sourceCompatibility = 1.6
          targetCompatibility = 1.6
        }
      }
    }

    task groovydocJar(type: Jar, dependsOn: groovydoc) {
      classifier = 'javadoc'
      from 'build/docs/groovydoc'
    }

    task sourcesJar(type: Jar) {
      from sourceSets.main.allSource
      classifier = 'sources'
    }

    artifacts {
      archives groovydocJar
      archives sourcesJar
    }

    signing {
      required !version.contains("SNAPSHOT")
      sign configurations.archives
    }

    uploadArchives {
      repositories {
        mavenDeployer {
          beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

          repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            if (hasCredentials) {
              authentication(userName: nexusUsername, password: nexusPassword)
            }
          }
          snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
            if (hasCredentials) {
              authentication(userName: nexusUsername, password: nexusPassword)
            }
          }

          pom.project {
            name 'Helium'
            description 'DSL and Java API for REST API specification'
            url 'https://github.com/stanfy/helium'
            inceptionYear '2013'

            scm {
              url 'https://github.com/stanfy/helium'
              connection 'scm:git:git@github.com:stanfy/helium.git'
              developerConnection 'scm:git:git@github.com:stanfy/helium.git'
            }

            licenses {
              license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
              }
            }

            developers {
              developer {
                id 'rmazur'
                name 'Roman Mazur'
                email 'rmazur@stanfy.com.ua'
              }
            }
          }

        }
      }
    }
  }



}
