// MARK:- Request

struct Request {
    let url: String
    let method: RequestMethod
    let params: [String: AnyObject]
    let encoding: RequestParametersEncoding
    let expectedStatusCodes: Range<Int>
    let expectedContentTypes: [String]
    let headers: [String: String]

    init(
        url: String,
        method: RequestMethod,
        encoding: RequestParametersEncoding,
        params: [String: AnyObject] = [:],
        headers: [String: String] = [:],
        expectedStatusCodes: Range<Int> = 200..<300,
        expectedContentTypes: [String] = ["*/*"]
    ) {
        self.url = url
        self.method = method
        self.params = params
        self.encoding = encoding
        self.expectedStatusCodes = expectedStatusCodes
        self.expectedContentTypes = expectedContentTypes
        self.headers = headers
    }
}

// MARK:- Provider

protocol RequestProvider {
    func provideRequest() -> Request
}

// MARK:- Request Params Encoding

enum RequestParametersEncoding {
    case JSON   // application JSON
    case URL    // parameters in URL
    case FORM   // parameters in BODY form-encoded
}

// MARK:- Request Method

enum RequestMethod: String {
    case GET
    case POST
    case PUT
    case DELETE
    case PATCH
}